{"version":3,"file":"jira.js","sources":["../src/services/jira.ts"],"sourcesContent":["import {URL} from 'url'\n\nimport {RequestInit} from 'node-fetch'\n\nimport apiHandler from '../utils/fetch'\n\nexport default class Jira {\n  private readonly baseUrl: string\n  private readonly token: string\n  private readonly email: string\n\n  constructor({\n    baseUrl,\n    token,\n    email\n  }: {\n    baseUrl: string\n    token: string\n    email: string\n  }) {\n    this.baseUrl = baseUrl\n    this.token = token\n    this.email = email\n  }\n\n  private jiraClient(\n    url: string,\n    {method, body, headers = {}}: RequestInit\n  ): any {\n    const requestUrl = new URL(url, this.baseUrl)\n\n    if (method === undefined) {\n      method = 'GET'\n    }\n\n    if (headers['Accept'] === undefined) {\n      headers['Accept'] = 'application/json'\n    }\n\n    if (headers['Content-Type'] === undefined) {\n      headers['Content-Type'] = 'application/json'\n    }\n\n    if (headers['Authorization'] === undefined) {\n      headers['Authorization'] = `Basic ${Buffer.from(\n        `${this.email}:${this.token}`\n      ).toString('base64')}`\n    }\n\n    // if (body && headers['Content-Type'] === 'application/json') {\n    //   body = JSON.stringify(body)\n    // }\n\n    return apiHandler(requestUrl.toString(), {\n      method,\n      headers,\n      body\n    })\n  }\n\n  async getMyself(): Promise<any> {\n    return this.jiraClient('/rest/api/3/myself', {\n      method: 'GET'\n    })\n  }\n\n  async getIssue(issueId: string): Promise<any> {\n    return this.jiraClient(`/rest/api/3/issue/${issueId}`, {\n      method: 'GET'\n    })\n  }\n\n  async addComment(issueKey: string, data: any): Promise<any> {\n    return this.jiraClient(`/rest/api/3/issue/${issueKey}/comment`, {\n      method: 'POST',\n      body: data\n    })\n  }\n\n  async getIssueTransitions(issueKey: string) {\n    return this.jiraClient(`/rest/api/3/issue/${issueKey}/transitions`, {\n      method: 'GET'\n    })\n  }\n\n  async transitionIssue(issueKey: string, data: any) {\n    return this.jiraClient(`/rest/api/3/issue/${issueKey}/transitions`, {\n      method: 'POST',\n      body: data\n    })\n  }\n}\n"],"names":["url","URL","apiHandler"],"mappings":";;;;;;;;;;;;;;;;;AAMc,MAAO,IAAI,CAAA;AACN,IAAA,OAAO,CAAQ;AACf,IAAA,KAAK,CAAQ;AACb,IAAA,KAAK,CAAQ;AAE9B,IAAA,WAAA,CAAY,EACV,OAAO,EACP,KAAK,EACL,KAAK,EAKN,EAAA;AACC,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;AACtB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;AAClB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;KACnB;IAEO,UAAU,CAChBA,KAAW,EACX,EAAC,MAAM,EAAE,IAAI,EAAE,OAAO,GAAG,EAAE,EAAc,EAAA;QAEzC,MAAM,UAAU,GAAG,IAAIC,OAAG,CAACD,KAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QAE7C,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,MAAM,GAAG,KAAK,CAAA;AACf,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;AACnC,YAAA,OAAO,CAAC,QAAQ,CAAC,GAAG,kBAAkB,CAAA;AACvC,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,KAAK,SAAS,EAAE;AACzC,YAAA,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAA;AAC7C,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,eAAe,CAAC,KAAK,SAAS,EAAE;YAC1C,OAAO,CAAC,eAAe,CAAC,GAAG,CAAA,MAAA,EAAS,MAAM,CAAC,IAAI,CAC7C,CAAA,EAAG,IAAI,CAAC,KAAK,CAAI,CAAA,EAAA,IAAI,CAAC,KAAK,CAAE,CAAA,CAC9B,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA,CAAE,CAAA;AACvB,SAAA;;;;AAMD,QAAA,OAAOE,KAAU,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE;YACvC,MAAM;YACN,OAAO;YACP,IAAI;AACL,SAAA,CAAC,CAAA;KACH;AAED,IAAA,MAAM,SAAS,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE;AAC3C,YAAA,MAAM,EAAE,KAAK;AACd,SAAA,CAAC,CAAA;KACH;IAED,MAAM,QAAQ,CAAC,OAAe,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,CAAqB,kBAAA,EAAA,OAAO,EAAE,EAAE;AACrD,YAAA,MAAM,EAAE,KAAK;AACd,SAAA,CAAC,CAAA;KACH;AAED,IAAA,MAAM,UAAU,CAAC,QAAgB,EAAE,IAAS,EAAA;AAC1C,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,CAAqB,kBAAA,EAAA,QAAQ,UAAU,EAAE;AAC9D,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAA;KACH;IAED,MAAM,mBAAmB,CAAC,QAAgB,EAAA;AACxC,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,CAAqB,kBAAA,EAAA,QAAQ,cAAc,EAAE;AAClE,YAAA,MAAM,EAAE,KAAK;AACd,SAAA,CAAC,CAAA;KACH;AAED,IAAA,MAAM,eAAe,CAAC,QAAgB,EAAE,IAAS,EAAA;AAC/C,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,CAAqB,kBAAA,EAAA,QAAQ,cAAc,EAAE;AAClE,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAA;KACH;AACF;;;;"}