{"version":3,"file":"transition-execute.js","sources":["../src/actions/transition/transition-execute.ts"],"sourcesContent":["import Jira from '../../services/jira'\n\nasync function execute(config, transitionName) {\n  const jiraInstance = new Jira({\n    baseUrl: config.baseUrl,\n    email: config.email,\n    token: config.token\n  })\n\n  const configIssueKeys: string = config.issue\n\n  const issueKeys = configIssueKeys.split(',')\n\n  const transitionedIssues: Array<{issueKey: string; transitionName: string}> =\n    []\n\n  for (const issueKey of issueKeys) {\n    const response = await jiraInstance.getIssueTransitions(issueKey)\n\n    if (response.status !== 200) {\n      throw new Error('Get issue transitions failed.')\n    }\n\n    const {transitions} = response.data\n\n    const transitionToApply = transitions.find(\n      t => transitionName.toLowerCase() === t.name.toLowerCase()\n    )\n\n    if (!transitionToApply) {\n      console.log('Please specify transition name or transition id.')\n      console.log('Possible transitions:')\n\n      for (const t of transitions) {\n        console.log(`'${t.to.name}'`)\n      }\n\n      throw new Error('Transition not found.')\n    }\n\n    console.log(`Selected transition: ${transitionToApply.name}`)\n\n    await jiraInstance.transitionIssue(\n      issueKey,\n      JSON.stringify({\n        transition: {\n          id: transitionToApply.id\n        }\n      })\n    )\n\n    const transitionedIssue = await jiraInstance.getIssues(issueKey)\n\n    if (transitionedIssue.status !== 200) {\n      throw new Error('Get issue failed.')\n    }\n\n    transitionedIssues.push({\n      issueKey,\n      transitionName: transitionedIssue.data.fields.status.name\n    })\n  }\n\n  return transitionedIssues\n}\n\nexport default execute\n"],"names":["Jira"],"mappings":";;;;;;;;;;;;;;;;;AAEA,eAAe,OAAO,CAAC,MAAM,EAAE,cAAc,EAAA;AAC3C,IAAA,MAAM,YAAY,GAAG,IAAIA,IAAI,CAAC;QAC5B,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,KAAK,EAAE,MAAM,CAAC,KAAK;AACpB,KAAA,CAAC,CAAA;AAEF,IAAA,MAAM,eAAe,GAAW,MAAM,CAAC,KAAK,CAAA;IAE5C,MAAM,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAE5C,MAAM,kBAAkB,GACtB,EAAE,CAAA;AAEJ,IAAA,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;QAChC,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAA;AAEjE,QAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC3B,YAAA,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;AACjD,SAAA;AAED,QAAA,MAAM,EAAC,WAAW,EAAC,GAAG,QAAQ,CAAC,IAAI,CAAA;QAEnC,MAAM,iBAAiB,GAAG,WAAW,CAAC,IAAI,CACxC,CAAC,IAAI,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAC3D,CAAA;QAED,IAAI,CAAC,iBAAiB,EAAE;AACtB,YAAA,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAA;AAC/D,YAAA,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAA;AAEpC,YAAA,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;gBAC3B,OAAO,CAAC,GAAG,CAAC,CAAI,CAAA,EAAA,CAAC,CAAC,EAAE,CAAC,IAAI,CAAG,CAAA,CAAA,CAAC,CAAA;AAC9B,aAAA;AAED,YAAA,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAA;AACzC,SAAA;QAED,OAAO,CAAC,GAAG,CAAC,CAAA,qBAAA,EAAwB,iBAAiB,CAAC,IAAI,CAAE,CAAA,CAAC,CAAA;QAE7D,MAAM,YAAY,CAAC,eAAe,CAChC,QAAQ,EACR,IAAI,CAAC,SAAS,CAAC;AACb,YAAA,UAAU,EAAE;gBACV,EAAE,EAAE,iBAAiB,CAAC,EAAE;AACzB,aAAA;AACF,SAAA,CAAC,CACH,CAAA;QAED,MAAM,iBAAiB,GAAG,MAAM,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;AAEhE,QAAA,IAAI,iBAAiB,CAAC,MAAM,KAAK,GAAG,EAAE;AACpC,YAAA,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAA;AACrC,SAAA;QAED,kBAAkB,CAAC,IAAI,CAAC;YACtB,QAAQ;YACR,cAAc,EAAE,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI;AAC1D,SAAA,CAAC,CAAA;AACH,KAAA;AAED,IAAA,OAAO,kBAAkB,CAAA;AAC3B;;;;"}